name: Deploy to VPS

on:
  push:
    branches: [deploy]
  pull_request:
    branches: [main, deploy]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy' && github.event_name == 'push'

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4

      - name: 📦 Filter only .py files and pages/
        run: |
          mkdir filtered
          find . -name "*.py" -exec cp --parents {} filtered \;
          if [ -d pages ]; then cp -r pages filtered/pages; fi
          tar -czf deploy.tar.gz -C filtered .

      - name: 📤 Upload filtered files to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "deploy.tar.gz"
          target: "/root/stockalert"

      - name: ⚙️ SSH Deploy + Restart PM2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            echo "🚀 Starting deployment..."
            cd /root/stockalert

            # Unpack code
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            rm -rf filtered

            # Write .env from GitHub Secrets (injected at compile time)
            cat > .env <<EOF
            POLYGON_API_KEY=${{ secrets.POLYGON_API_KEY }}
            WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}
            WEBHOOK_URL_2=${{ secrets.WEBHOOK_URL_2 }}
            WEBHOOK_URL_LOGGING=${{ secrets.WEBHOOK_URL_LOGGING }}
            WEBHOOK_URL_LOGGING_2=${{ secrets.WEBHOOK_URL_LOGGING_2 }}
            EOF
            echo "✅ .env written with all secrets."

            # Restart PM2 so it picks up the new .env
            pm2 delete stockalerter || true
            pm2 start bash --name stockalerter -- -c "\
              cd /root/stockalert && \
              source venv/bin/activate && \
              set -a && source .env && set +a && \
              streamlit run Home.py --server.port 8503 --server.address 0.0.0.0"
            pm2 save

            echo "✅ Deployment & restart completed!"

      - name: 📢 Notify success on Discord
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"content":"✅ Deployment to VPS succeeded! 🚀"}' \
            https://discord.com/api/webhooks/1352034334306992238/UvKcP8O5I9IzOQ7uE0HDcHa9NJT6gECkg5ZGS2PMRm-MH6ymUCKnFU3xTOy68qA82g4G

      - name: ❌ Notify failure on Discord
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"content":"❌ Deployment to VPS failed! Check GitHub Actions logs."}' \
            https://discord.com/api/webhooks/1352034334306992238/UvKcP8O5I9IzOQ7uE0HDcHa9NJT6gECkg5ZGS2PMRm-MH6ymUCKnFU3xTOy68qA82g4G

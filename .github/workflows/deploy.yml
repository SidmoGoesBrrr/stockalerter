name: Deploy to VPS

on:
  push:
    branches: [deploy]
  pull_request:
    branches: [main, deploy]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deploy' && github.event_name == 'push'

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Filter only .py files and pages/
        run: |
          mkdir filtered
          find . -name "*.py" -exec cp --parents {} filtered \;
          if [ -d pages ]; then cp -r pages filtered/pages; fi
          tar -czf deploy.tar.gz -C filtered .

      - name: üì§ Upload filtered files to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "deploy.tar.gz"
          target: "/root/stockalert"

      - name: ‚öôÔ∏è SSH Deploy + Restart PM2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          envs: POLYGON_API_KEY,WEBHOOK_URL,WEBHOOK_URL_2,WEBHOOK_URL_LOGGING,WEBHOOK_URL_LOGGING_2
          script: |
            echo "üöÄ Starting deployment..."

            cd /root/stockalert
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            rm -rf filtered

            # Export envs for current shell (optional)
            export POLYGON_API_KEY=${POLYGON_API_KEY}
            export WEBHOOK_URL=${WEBHOOK_URL}
            export WEBHOOK_URL_2=${WEBHOOK_URL_2}
            export WEBHOOK_URL_LOGGING=${WEBHOOK_URL_LOGGING}
            export WEBHOOK_URL_LOGGING_2=${WEBHOOK_URL_LOGGING_2}

            # Set envs for PM2 so they persist
            pm2 delete stockalerter || true

            pm2 start bash --name stockalerter -- \
              -c "cd /root/stockalert && source venv/bin/activate && streamlit run Home.py --server.port 8503 --server.address 0.0.0.0"

            pm2 set env:POLYGON_API_KEY "${POLYGON_API_KEY}"
            pm2 set env:WEBHOOK_URL "${WEBHOOK_URL}"
            pm2 set env:WEBHOOK_URL_2 "${WEBHOOK_URL_2}"
            pm2 set env:WEBHOOK_URL_LOGGING "${WEBHOOK_URL_LOGGING}"
            pm2 set env:WEBHOOK_URL_LOGGING_2 "${WEBHOOK_URL_LOGGING_2}"

            pm2 save
            echo "‚úÖ Deployment completed!"

      - name: üì¢ Notify success on Discord
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"content":"‚úÖ Deployment to VPS succeeded! üöÄ"}' \
            https://discord.com/api/webhooks/1352034334306992238/UvKcP8O5I9IzOQ7uE0HDcHa9NJT6gECkg5ZGS2PMRm-MH6ymUCKnFU3xTOy68qA82g4G

      - name: ‚ùå Notify failure on Discord
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"content":"‚ùå Deployment to VPS failed! Check GitHub Actions logs."}' \
            https://discord.com/api/webhooks/1352034334306992238/UvKcP8O5I9IzOQ7uE0HDcHa9NJT6gECkg5ZGS2PMRm-MH6ymUCKnFU3xTOy68qA82g4G
